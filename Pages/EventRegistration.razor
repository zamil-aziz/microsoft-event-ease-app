@page "/register/{EventId:int}"

@using EventEaseApp.Models

<h1>Register for Event</h1>

<EditForm Model="@RegistrationData" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="RegistrationData.Name" class="form-control" />
        <ValidationMessage For="@(() => RegistrationData.Name)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="RegistrationData.Email" class="form-control" />
        <ValidationMessage For="@(() => RegistrationData.Email)" />
    </div>

    <div class="form-group">
        <label for="phone">Phone:</label>
        <InputText id="phone" @bind-Value="RegistrationData.Phone" class="form-control" />
        <ValidationMessage For="@(() => RegistrationData.Phone)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    [Parameter]
    public int EventId { get; set; }

    private RegistrationModel RegistrationData = new RegistrationModel();

    private void HandleValidSubmit()
    {
        // Set the EventId for the registration
        RegistrationData.EventId = EventId;

        // Save registration data (e.g., to a list or database)
        Console.WriteLine("Registration Successful!");
        Console.WriteLine($"Event ID: {RegistrationData.EventId}, Name: {RegistrationData.Name}, Email: {RegistrationData.Email}, Phone: {RegistrationData.Phone}");

        // Add the registration to the global list
        EventDetails.Registrations.Add(RegistrationData);

        // Redirect to the event details page
        NavigationManager.NavigateTo($"/event-details/{EventId}");
    }

    [Inject]
    private NavigationManager NavigationManager { get; set; } = null!;
}
